#BlueJ class context
comment0.target=Board
comment1.params=
comment1.target=void\ main()
comment10.params=start\ end\ deck
comment10.target=boolean\ isCompleteRun(int,\ int,\ Deck)
comment11.params=
comment11.target=void\ printBoard()
comment11.text=\r\n\ Prints\ the\ board\ to\ the\ terminal\ window\ by\ displaying\ the\ stacks,\ draw\r\n\ pile,\ and\ done\ stacks\ (if\ you\ chose\ to\ have\ them)\r\n
comment2.params=numStacks\ numDecks
comment2.target=Board(int,\ int)
comment2.text=\r\n\ \ Sets\ up\ the\ Board\ and\ fills\ the\ stacks\ and\ draw\ pile\ from\ a\ Deck\r\n\ \ consisting\ of\ numDecks\ Decks.\ \ The\ number\ of\ Cards\ in\ a\ Deck\r\n\ \ depends\ on\ the\ number\ of\ suits.\ Here\ are\ examples\:\r\n\ \ \r\n\ \ \#\ suits\ \ \ \ \ \#\ numDecks\ \ \ \ \ \ \#cards\ in\ overall\ Deck\r\n\ \ \ \ \ \ 1\ \ \ \ \ \ \ \ \ \ \ \ 1\ \ \ \ \ \ \ \ \ \ 13\ (all\ same\ suit)\r\n\ \ \ \ \ \ 1\ \ \ \ \ \ \ \ \ \ \ \ 2\ \ \ \ \ \ \ \ \ \ 26\ (all\ same\ suit)\r\n\ \ \ \ \ \ 2\ \ \ \ \ \ \ \ \ \ \ \ 1\ \ \ \ \ \ \ \ \ \ 26\ (one\ of\ each\ suit)\r\n\ \ \ \ \ \ 2\ \ \ \ \ \ \ \ \ \ \ \ 2\ \ \ \ \ \ \ \ \ \ 52\ (two\ of\ each\ suit)\r\n\ \ \ \ \ \ 4\ \ \ \ \ \ \ \ \ \ \ \ 2\ \ \ \ \ \ \ \ \ \ 104\ (two\ of\ each\ suit)\r\n\ \ \ \ \ \ \r\n\ \ Once\ the\ overall\ Deck\ is\ built,\ it\ is\ shuffled\ and\ half\ the\ cards\r\n\ \ are\ placed\ as\ evenly\ as\ possible\ into\ the\ stacks.\ \ The\ other\ half\r\n\ \ of\ the\ cards\ remain\ in\ the\ draw\ pile.\ \ If\ you'd\ like\ to\ specify\r\n\ \ more\ than\ one\ suit,\ feel\ free\ to\ add\ to\ the\ parameter\ list.\r\n
comment3.params=
comment3.target=void\ restoreDeck()
comment4.params=
comment4.target=void\ saveDeck()
comment5.params=symbol\ src\ dest
comment5.target=void\ makeMove(java.lang.String,\ int,\ int)
comment5.text=\r\n\ \ Moves\ a\ run\ of\ cards\ from\ src\ to\ dest\ (if\ possible)\ and\ flips\ the\r\n\ \ next\ card\ if\ one\ is\ available.\ \ Change\ the\ parameter\ list\ to\ match\r\n\ \ your\ implementation\ of\ Card\ if\ you\ need\ to.\r\n
comment6.params=symbol\ src\ dest\ index
comment6.target=boolean\ isValidMove(java.lang.String,\ int,\ int,\ int)
comment7.params=
comment7.target=void\ drawCards()
comment7.text=\ \r\n\ \ Moves\ one\ card\ onto\ each\ stack,\ or\ as\ many\ as\ are\ available\r\n
comment8.params=
comment8.target=boolean\ isEmpty()
comment8.text=\r\n\ \ Returns\ true\ if\ all\ stacks\ and\ the\ draw\ pile\ are\ all\ empty\r\n
comment9.params=sourceStack
comment9.target=void\ clear(int)
comment9.text=\r\n\ \ If\ there\ is\ a\ run\ of\ A\ through\ K\ starting\ at\ the\ end\ of\ sourceStack\r\n\ \ then\ the\ run\ is\ removed\ from\ the\ game\ or\ placed\ into\ a\ completed\r\n\ \ stacks\ area.\r\n\ \ \r\n\ \ If\ there\ is\ not\ a\ run\ of\ A\ through\ K\ starting\ at\ the\ end\ of\ sourceStack\r\n\ \ then\ an\ invalid\ move\ message\ is\ displayed\ and\ the\ Board\ is\ not\ changed.\r\n
numComments=12
